name: Build and Deploy to EKS (Test env)

on:
  push:
    branches: [ "develop", "main" ]
    tags: "v*.*.*"
env:
  # REPO_NAME: ${{ vars.ECR_REPOSITORY }}
  REPO_NAME: linnk-server
  EKS_NAMESPACE_TEST: ${{ vars.EKS_NAMESPACE_TEST }}
  EKS_NAMESPACE_PROD: ${{ vars.EKS_NAMESPACE_PROD }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test 
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    
    # - name: Get Repository Name
    #   run: echo "REPO_NAME=$(basename -s .git $GITHUB_REPOSITORY|awk -F '-' '{print $2}')" >> $GITHUB_ENV

    - name: Set short SHA
      run: echo "IMAGE_TAG=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_ENV

    - name: Check for git tag version
      id: get_tag
      run: |
        TAG=$(git describe --tags --exact-match 2> /dev/null || echo "")
        if [[ -n "$TAG" ]]; then
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
        mask-aws-account-id: false

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'
      env:
        AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
        AWS_REGION: ${{ vars.AWS_REGION }}

    - name: Get ECR registry
      run: |
        ECR_REGISTRY=$(aws ecr describe-repositories --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text | cut -d'/' -f1)
        echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
      env:
        AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
        AWS_REGION: ${{ vars.AWS_REGION }}

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
      run: |
        docker build -t $ECR_REGISTRY/${{ env.REPO_NAME }}:$IMAGE_TAG .
        docker push $ECR_REGISTRY/${{ env.REPO_NAME }}:$IMAGE_TAG
        echo "Build success: ${ECR_REGISTRY}/${{ env.REPO_NAME }}:${IMAGE_TAG}"

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}

    # 升级test
    - name: update deployment image (test)
      run: |
        kubectl -n ${{ env.EKS_NAMESPACE_TEST }} set image deployment/${{ env.REPO_NAME }} ${{ env.REPO_NAME }}=${{ env.ECR_REGISTRY }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}

    - name: verify deployment (test)
      run: |
        kubectl -n ${{ env.EKS_NAMESPACE_TEST }} rollout status deployment/${{ env.REPO_NAME }} --timeout=120s

    # 升级生产 main分支 或者tag时候触发
    - name: update deployment image (prod)
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
        kubectl -n ${{ env.EKS_NAMESPACE_PROD }} set image deployment/${{ env.REPO_NAME }} ${{ env.REPO_NAME }}=${{ env.ECR_REGISTRY }}/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}

    # - name: verify deployment (prod)
    #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    #   run: |
    #     kubectl -n ${{ env.EKS_NAMESPACE_PROD }} rollout status deployment/${{ env.REPO_NAME }} --timeout=60s